/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode swapPairs(ListNode head) {
        if(head == null || head.next == null)   return head;
        ListNode dummy = new ListNode(-1);
        dummy.next = head;
        ListNode curr = dummy;
        ListNode temp = dummy;
        while (curr.next != null && curr.next.next != null) {//swap curr.next and curr.next.next
            ListNode first = curr.next;
            ListNode second = curr.next.next;
            ListNode third = curr.next.next.next;
            
            curr.next = second;
            second.next = first;
            first.next = third;
            curr = first;

        }
        return dummy.next;
    }
}
