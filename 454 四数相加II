/*
很容易想到n^3的解法
优化：遍历两次n^2
*/
class Solution {
    public int fourSumCount(int[] nums1, int[] nums2, int[] nums3, int[] nums4) {
        Map<Integer, Integer> map = new HashMap<>();
        int n = nums1.length;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                int sum = nums1[i] + nums2[j];
                map.put(sum, map.getOrDefault(sum,0) + 1);
                
            }
        }
        int count = 0; 
        for (int k = 0; k < n; k++ ) {
            for (int l = 0; l < n; l++) {
                int target = 0 - nums3[k] -nums4[l];
                if (map.containsKey(target))    count += map.get(target);
            }
            
        }
        return count;
    }
}
